on:
  push:
    branches: # Add development branches here
      - 3.x
      - homebrew-integration

name: Unit Testing CI on Push to development branches
jobs:
  checkout_build:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/php-ci:v7.4
    name: Checkout & build Phar
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Full Composer Install
        run: composer install
      - name: Phar Build
        run: composer phar:build
      - name: permissions
        run: chmod +x ./robo
      - name: Save repo content as artifact
        uses: actions/upload-artifact@v2
        with:
          name: full-workspace
          path: ${{ github.workspace }}
      - name: permissions
        run: chmod +x ./robo
      - name: Save robo.phar as artifact
        uses: actions/upload-artifact@v2
        with:
          name: robo-phar
          path: robo
          if-no-files-found: error
          retention-days: 5

  coding-guidelines:
    name: Coding Guidelines
    runs-on: ubuntu-latest
    needs:
      - checkout_build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get artifact
        uses: actions/download-artifact@v2
        with:
          name: robo-phar
      - name: permissions
        run: chmod +x ./robo
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-progress

      - name: Run phpcs
        run: composer code:cs

      - name: Run linter
        run: composer code:lint

  backward-compatibility:
    name: Backward Compatibility
    runs-on: ubuntu-latest
    needs:
      - checkout_build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
          extensions: intl

      - name: Install roave/backward-compatibility-check
        run: |
          mkdir -p tools
          composer --working-dir=tools require roave/backward-compatibility-check:^5

      - name: Run roave/backward-compatibility-check (Disable until we have 3.0.0 stable)
        run: echo ./tools/vendor/bin/roave-backward-compatibility-check --from=3.0.0

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs:
      - checkout_build
    env:
      PHP_EXTENSIONS: dom, json, libxml, mbstring, pdo_sqlite, soap, xml, xmlwriter

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php-version:
          - "7.4"

        php-ini-values:
          - assert.exception=1, zend.assertions=1

        dependencies:
          - locked

        include:
          - os: ubuntu-latest
            php-version: "7.4"
          - os: ubuntu-latest
            php-version: "8.0"
            php-ini-values: assert.exception=1, zend.assertions=1, opcache.enable=1, opcache.enable_cli=1, opcache.optimization_level=-1, opcache.jit_buffer_size=4096M, opcache.jit=1205

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get artifact
        uses: actions/download-artifact@v2
        with:
          name: robo-phar

      - name: permissions
        run: chmod +x ./robo

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ matrix.php-ini-values }}
      - name: Make sure everything is still installed
        run: composer install
      - name: Run tests with phpunit
        run: composer code:unit
